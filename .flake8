[flake8]
min_python_version = 3.11.0
max-line-length = 240
ban-relative-imports = true
# flake8-use-fstring: https://github.com/MichaelKim0407/flake8-use-fstring#--percent-greedy-and---format-greedy
format-greedy = 1
inline-quotes = single
# Allow omission of a return type hint for __init__ if at least one argument is annotated
# used by flake8-annotations
mypy-init-return = true
enable-extensions = TC, TC1
type-checking-exempt-modules = typing, typing-extensions
eradicate-whitelist-extend = ^-.*;
extend-ignore =
    # E203: Whitespace before ':' (pycqa/pycodestyle#373)
    E203,
    # SIM106: Handle error-cases first
    SIM106,
    # ANN101: Missing type annotation for self in method
    ANN101,
    # ANN102: Missing type annotation for cls in classmethod
    ANN102,
    F403,
    # E125: continuation line with same indent as next logical line
    E125,

per-file-ignores =
    # F401: Module imported by unused (non-implicit modules)
    # TC002: Move third-party import '...' into a type-checking block
    __init__.py:F401,TC002,
    # ANN201: Missing return type annotation for public function
    # E501: line too long
    tests/**:E501,Q000
    tests/test_*:ANN201
    tests/**/test_*:ANN201,E501,Q000


exclude =
    .git,
    __pycache__,
    docs/source/conf.py,
    old,
    build,
    dist,
    .venv,
    venv,
    var
    versioneer.py,
    **/_version.py,

extend-exclude =
    # Frozen and not subject to change in this repo:
    get-poetry.py,
    install-poetry.py,
    # External to the project's coding standards:
    tests/fixtures/*,
    tests/**/fixtures/*,
